	  Progetto di Laboratorio di Programmazione di Rete 2006/07
     "Fornire interattivita' a comunicazione TCP sfruttando multi-homing"


			   PROTOCOLLO APPLICAZIONE

  Formato segmento

dati:	| FLG | SEQ | LEN* | PLD ...//.. |
nak:	| FLG | SEQ |
ack:	| FLG | SEQ |

  * = opzionale

Tutti i campi sono lunghi un byte.
Il payload di default e' 255 byte. Se minore, la sua lunghezza e' specificata
dal campo LEN e una bit in FLG indica che il payload non ha lunghezza
standard.


  Algoritmo di routing

Il proxy sender forma i pacchetti e li instrada in maniera round-robin. A
priori non c'e' controllo di efficienza dei canali ne' un algoritmo di scelta
del canale migliore: un segmento per ogni canale connesso.

Il proxy receiver attende i segmenti e li riordina, spedendo i consecutivi al
Receiver.
Ogni pacchetto che arriva fuori ordine genera uno o piu' nak che vengono
inviati al Proxy Sender per chiedere la rispedizione di quelli mancanti. I nak
non vengono spediti immediatamente; solo se allo scadere di TONAK_VAL timeout
non e' arrivato il pacchetto mancante associato al timeout.

Alla ricezione di un nak, il Proxy Sender recupera il segmento dalla struttura
ht_sent, lo marca come CRITICO e accoda alla struttura dei segmenti urgenti.
I segmenti con il bit CRTFLAG vengono spediti su ogni canale per essere certi
che non vengano ritardati.

Le code di upload dei Proxy vengono mantenute ordinate sulla priorita' dei
segmenti:

	0. nak
	1. dati da rispedire in risposta a un nak
	2. ack
	3. dati


  Blocco dei canali

I proxy mantengono un timeout di attivita' per ogni canale di rete. Allo
scadere il canale e' considerato inattivo, chiuso, invalidato e tutti i
segmenti uscenti vengono reinseriti nella struttura dei segmenti urgenti.
