%!PS-Adobe-3.0
%%Title: src/h/types.h
%%For: jack
%%Creator: VIM - Vi IMproved 7.1 (2007 May 12)
%%CreationDate: Fri Mar 14 13:27:32 2008
%%DocumentData: Clean8Bit
%%Orientation: Portrait
%%Pages: (atend)
%%PageOrder: Ascend
%%BoundingBox: 59 49 564 800
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-Oblique
%%+ font Courier-BoldOblique
%%DocumentSuppliedResources: procset VIM-Prolog 1.4 1
%%+ encoding VIM-latin1 1.0 0
%%Requirements: duplex collate color
%%EndComments
%%BeginDefaults
%%PageResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-Oblique
%%+ font Courier-BoldOblique
%%PageMedia: A4
%%EndDefaults
%%BeginProlog
%%BeginResource: procset VIM-Prolog
%%BeginDocument: /usr/share/vim/vim71/print/prolog.ps
%!PS-Adobe-3.0 Resource-ProcSet
%%Title: VIM-Prolog
%%Version: 1.4 1
%%EndComments
% Editing of this file is NOT RECOMMENDED.  You run a very good risk of causing
% all PostScript printing from VIM failing if you do.  PostScript is not called
% a write-only language for nothing!
/packedarray where not{userdict begin/setpacking/pop load def/currentpacking
false def end}{pop}ifelse/CP currentpacking def true setpacking
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/d/def ld
/db{dict begin}bd/cde{currentdict end}bd
/T true d/F false d
/SO null d/sv{/SO save d}bd/re{SO restore}bd
/L2 systemdict/languagelevel 2 copy known{get exec}{pop pop 1}ifelse 2 ge d
/m/moveto ld/s/show ld /ms{m s}bd /g/setgray ld/r/setrgbcolor ld/sp{showpage}bd
/gs/gsave ld/gr/grestore ld/cp/currentpoint ld
/ul{gs UW setlinewidth cp UO add 2 copy newpath m 3 1 roll add exch lineto
stroke gr}bd
/bg{gs r cp BO add 4 -2 roll rectfill gr}bd
/sl{90 rotate 0 exch translate}bd
L2{
/sspd{mark exch{setpagedevice}stopped cleartomark}bd
/nc{1 db/NumCopies ed cde sspd}bd
/sps{3 db/Orientation ed[3 1 roll]/PageSize ed/ImagingBBox null d cde sspd}bd
/dt{2 db/Tumble ed/Duplex ed cde sspd}bd
/c{1 db/Collate ed cde sspd}bd
}{
/nc{/#copies ed}bd
/sps{statusdict/setpage get exec}bd
/dt{statusdict/settumble 2 copy known{get exec}{pop pop pop}ifelse
statusdict/setduplexmode 2 copy known{get exec}{pop pop pop}ifelse}bd
/c{pop}bd
}ifelse
/ffs{findfont exch scalefont d}bd/sf{setfont}bd
/ref{1 db findfont dup maxlength dict/NFD ed{exch dup/FID ne{exch NFD 3 1 roll
put}{pop pop}ifelse}forall/Encoding findresource dup length 256 eq{NFD/Encoding
3 -1 roll put}{pop}ifelse NFD dup/FontType get 3 ne{/CharStrings}{/CharProcs}
ifelse 2 copy known{2 copy get dup maxlength dict copy[/questiondown/space]{2
copy known{2 copy get 2 index/.notdef 3 -1 roll put pop exit}if pop}forall put
}{pop pop}ifelse dup NFD/FontName 3 -1 roll put NFD definefont pop end}bd
CP setpacking
(\004)cvn{}bd
% vim:ff=unix:
%%EOF
%%EndDocument
%%EndResource
%%BeginResource: encoding VIM-latin1
%%BeginDocument: /usr/share/vim/vim71/print/latin1.ps
%!PS-Adobe-3.0 Resource-Encoding
%%Title: VIM-latin1
%%Version: 1.0 0
%%EndComments
/VIM-latin1[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quotesingle
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/grave /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis]
/Encoding defineresource pop
% vim:ff=unix:
%%EOF
%%EndDocument
%%EndResource
%%EndProlog
%%BeginSetup
595 842 0 sps
1 nc
T F dt
T c
%%IncludeResource: font Courier
/_F0 /VIM-latin1 /Courier ref
/F0 10 /_F0 ffs
%%IncludeResource: font Courier-Bold
/_F1 /VIM-latin1 /Courier-Bold ref
/F1 10 /_F1 ffs
%%IncludeResource: font Courier-Oblique
/_F2 /VIM-latin1 /Courier-Oblique ref
/F2 10 /_F2 ffs
%%IncludeResource: font Courier-BoldOblique
/_F3 /VIM-latin1 /Courier-BoldOblique ref
/F3 10 /_F3 ffs
/UO -1 d
/UW 0.5 d
/BO -2.5 d
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(src/h/types.h                                                               Pagina 1)59.5 792.4 ms
0 0 0.498 r
(#ifndef MH_TYPES_H)59.5 772.4 ms
(#define MH_TYPES_H)59.5 762.4 ms
(#include )59.5 742.4 ms
0.498 0 0.498 r
(<assert.h>)s
0 0 0.498 r
(#include )59.5 732.4 ms
0.498 0 0.498 r
(<arpa/inet.h>)s
0 0 0.498 r
(#include )59.5 722.4 ms
0.498 0 0.498 r
(<errno.h>)s
0 0 0.498 r
(#include )59.5 712.4 ms
0.498 0 0.498 r
(<inttypes.h>)s
0 0 0.498 r
(#include )59.5 702.4 ms
0.498 0 0.498 r
(<netinet/in.h>)s
0 0 0.498 r
(#include )59.5 692.4 ms
0.498 0 0.498 r
(<stdio.h>)s
0 0 0.498 r
(#include )59.5 682.4 ms
0.498 0 0.498 r
(<stdlib.h>)s
0 0 0.498 r
(#include )59.5 672.4 ms
0.498 0 0.498 r
(<sys/socket.h>)s
0 0 0.498 r
(#include )59.5 662.4 ms
0.498 0 0.498 r
(<sys/time.h>)s
0 0 0.498 r
(#include )59.5 652.4 ms
0.498 0 0.498 r
(<sys/types.h>)s
0 0 0.498 r
(#include )59.5 642.4 ms
0.498 0 0.498 r
(<unistd.h>)s
0 0.498 0.498 r
(/*******************************************************************************)59.5 622.4 ms
(                             Definizioni di tipo)59.5 612.4 ms
(*******************************************************************************/)59.5 602.4 ms
(/*)59.5 582.4 ms
( * Booleani e relativi valori.)59.5 572.4 ms
( */)59.5 562.4 ms
0 0.498 0 r
(typedef)59.5 552.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(unsigned)s
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(char)s
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(bool)s
F0 sf
0 g
(;)s
F1 sf
0 0 0.498 r
(#ifdef FALSE)59.5 532.4 ms
(#undef FALSE)59.5 522.4 ms
(#endif)59.5 512.4 ms
(#define     FALSE     \(\()59.5 502.4 ms
0 0.498 0 r
(bool)s
0 0 0.498 r
(\))s
0.498 0 0.498 r
(0)s
0 0 0.498 r
(\))s
(#ifdef TRUE)59.5 482.4 ms
(#undef TRUE)59.5 472.4 ms
(#endif)59.5 462.4 ms
(#define     TRUE     \(!FALSE\))59.5 452.4 ms
0 0.498 0.498 r
(/*)59.5 432.4 ms
( * Identificativi delle porte.)59.5 422.4 ms
( */)59.5 412.4 ms
0 0.498 0 r
(typedef)59.5 402.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(uint16_t)s
F0 sf
0 g
( port_t;)s
F1 sf
0 0.498 0.498 r
(/*)59.5 382.4 ms
( * Descrittori.)59.5 372.4 ms
( */)59.5 362.4 ms
0 0.498 0 r
(typedef)59.5 352.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(int)s
F0 sf
0 g
( fd_t;     )s
F1 sf
0 0.498 0.498 r
(/* file e socket */)s
0 0.498 0 r
(typedef)59.5 342.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(int)s
F0 sf
0 g
( cd_t;     )s
F1 sf
0 0.498 0.498 r
(/* canali */)s
(/*)59.5 322.4 ms
( * Puntatori a funzione.)59.5 312.4 ms
( */)59.5 302.4 ms
0 0.498 0 r
(typedef)59.5 292.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(void)s
F0 sf
0 g
( \(*timeout_handler_t\)\()s
F1 sf
0 0.498 0 r
(int)s
F0 sf
0 g
( args\);)s
F1 sf
0 0.498 0.498 r
(/*)59.5 272.4 ms
( * Campi dei segmenti.)59.5 262.4 ms
( */)59.5 252.4 ms
(/* Numeri di sequenza. */)59.5 242.4 ms
0 0.498 0 r
(typedef)59.5 232.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(uint8_t)s
F0 sf
0 g
( seq_t;)s
F1 sf
0 0.498 0.498 r
(/* Lunghezza del segmento. */)59.5 222.4 ms
0 0.498 0 r
(typedef)59.5 212.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(uint8_t)s
F0 sf
0 g
( len_t;)s
F1 sf
0 0.498 0.498 r
(/* Dati. */)59.5 202.4 ms
0 0.498 0 r
(typedef)59.5 192.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(uint8_t)s
F0 sf
0 g
( pld_t;)s
F1 sf
0 0.498 0.498 r
(/* Flag conformazione segmento. */)59.5 182.4 ms
0 0.498 0 r
(typedef)59.5 172.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(uint8_t)s
F0 sf
0 g
( flag_t;)s
F1 sf
0 0.498 0.498 r
(/* Buffer contentente un segmento. */)59.5 162.4 ms
0 0.498 0 r
(typedef)59.5 152.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(uint8_t)s
F0 sf
0 g
( seg_t;)s
F1 sf
0 0.498 0.498 r
(/*******************************************************************************)59.5 122.4 ms
(                                   Costanti)59.5 112.4 ms
(*******************************************************************************/)59.5 102.4 ms
(/*)59.5 82.4 ms
( * Codici errno: quelli che non possono accadere in questo programma possono)59.5 72.4 ms
( * essere riciclati per scopi piu' utili.)59.5 62.4 ms
( */)59.5 52.4 ms
re sp
%%PageTrailer
%%Page: 2 2
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(src/h/types.h                                                               Pagina 2)59.5 792.4 ms
0 0.498 0.498 r
(/* Errore EISDIR ritutilizzato come read end-of-file, usato da cqueue_read. */)59.5 762.4 ms
0 0 0.498 r
(#define     EREOF     )59.5 752.4 ms
0.498 0 0.498 r
(EISDIR)s
0 0.498 0.498 r
(/* Numero di canali di rete. */)59.5 732.4 ms
0 0 0.498 r
(#define     NETCHANNELS    )59.5 722.4 ms
0.498 0 0.498 r
(3)s
0 0.498 0.498 r
(/* Numero di canali totali. */)59.5 712.4 ms
0 0 0.498 r
(#define     CHANNELS       \(NETCHANNELS + )59.5 702.4 ms
0.498 0 0.498 r
(1)s
0 0 0.498 r
(\))s
0 0.498 0.498 r
(/* Channel descriptor del primo canale di rete. */)59.5 692.4 ms
0 0 0.498 r
(#define     NETCD          )59.5 682.4 ms
0.498 0 0.498 r
(0)s
0 0.498 0.498 r
(/* Channel descriptor del canale dell'host. */)59.5 672.4 ms
0 0 0.498 r
(#define     HOSTCD         \(NETCHANNELS\))59.5 662.4 ms
0 0.498 0.498 r
(/*)59.5 632.4 ms
( * Tipo e durata dei timeout in secondi.)59.5 622.4 ms
( */)59.5 612.4 ms
(/* #define     TOACT_VAL     100000000.0 */)59.5 602.4 ms
0 0 0.498 r
(#define     TOACT_VAL     )59.5 592.4 ms
0.498 0 0.498 r
(0.500)s
0 0 0.498 r
(#define     TONAK_VAL     )59.5 582.4 ms
0.498 0 0.498 r
(0.300)s
0 0 0.498 r
(#define     TOACK_VAL     )59.5 572.4 ms
0.498 0 0.498 r
(0.300)s
0 0.498 0.498 r
(/* Numero di tipi di timeout. */)59.5 562.4 ms
0 0 0.498 r
(#define     TMOUTS      )59.5 552.4 ms
0.498 0 0.498 r
(3)s
0 0.498 0.498 r
(/* Indici */)59.5 542.4 ms
0 0 0.498 r
(#define     TOACK       )59.5 532.4 ms
0.498 0 0.498 r
(0)s
0 0 0.498 r
(#define     TONAK       )59.5 522.4 ms
0.498 0 0.498 r
(1)s
0 0 0.498 r
(#define     TOACT       )59.5 512.4 ms
0.498 0 0.498 r
(2)s
0 0.498 0.498 r
(/* Valore minimo del buffer tcp di spedizione.)59.5 482.4 ms
( * Per Linux e' 1024, NetBSD sembra accettare anche 1 \(!\). */)59.5 472.4 ms
0 0 0.498 r
(#define     TCP_MIN_SNDBUF_SIZE     )59.5 462.4 ms
0.498 0 0.498 r
(1024)s
0 0.498 0.498 r
(/*)59.5 432.4 ms
( * Segmenti.)59.5 422.4 ms
( */)59.5 412.4 ms
(/* Indici dei campi. */)59.5 402.4 ms
0 0 0.498 r
(#define     FLG     )59.5 392.4 ms
0.498 0 0.498 r
(0)s
0 0 0.498 r
(#define     SEQ     )59.5 382.4 ms
0.498 0 0.498 r
(1)s
0 0 0.498 r
(#define     LEN     )59.5 372.4 ms
0.498 0 0.498 r
(2)s
0 0.498 0.498 r
(/* Dimensione campi, in byte. */)59.5 352.4 ms
0 0 0.498 r
(#define     SEQLEN     )59.5 342.4 ms
0.498 0.498 0 r
(sizeof)s
0 0 0.498 r
(\(seq_t\))s
(#define     LENLEN     )59.5 332.4 ms
0.498 0.498 0 r
(sizeof)s
0 0 0.498 r
(\(len_t\))s
(#define     FLGLEN     )59.5 322.4 ms
0.498 0.498 0 r
(sizeof)s
0 0 0.498 r
(\(flag_t\))s
0 0.498 0.498 r
(/* Massimo numero di sequenza. */)59.5 302.4 ms
0 0 0.498 r
(#define     SEQMAX     )59.5 292.4 ms
0.498 0 0.498 r
(UINT8_MAX)s
0 0.498 0.498 r
(/* Limiti dei segmenti, in byte. */)59.5 272.4 ms
0 0 0.498 r
(#define     HDRMINLEN     \(FLGLEN + SEQLEN\))59.5 262.4 ms
(#define     HDRMAXLEN     \(FLGLEN + SEQLEN + LENLEN\))59.5 252.4 ms
(#define     PLDMAXLEN     )59.5 232.4 ms
0.498 0 0.498 r
(UINT8_MAX)s
0 0 0.498 r
(#define     PLDDEFLEN     PLDMAXLEN)59.5 222.4 ms
(#define     SEGMAXLEN     \(PLDMAXLEN + HDRMAXLEN\))59.5 202.4 ms
(#define     NAKLEN        FLGLEN + SEQLEN)59.5 182.4 ms
(#define     ACKLEN        NAKLEN)59.5 172.4 ms
0 0.498 0.498 r
(/* Bit del campo flag */)59.5 152.4 ms
0 0 0.498 r
(#define     CRTFLAG     )59.5 142.4 ms
0.498 0 0.498 r
(0x1)s
0 0 0.498 r
(#define     PLDFLAG     )59.5 132.4 ms
0.498 0 0.498 r
(0x2)s
0 0 0.498 r
(#define     LENFLAG     )59.5 122.4 ms
0.498 0 0.498 r
(0x4)s
0 0 0.498 r
(#define     NAKFLAG     )59.5 112.4 ms
0.498 0 0.498 r
(0x8)s
0 0 0.498 r
(#define     ACKFLAG     )59.5 102.4 ms
0.498 0 0.498 r
(0x10)s
0 0.498 0.498 r
(/* Tipi degli elementi da usare in get_cd_from */)59.5 72.4 ms
0 0 0.498 r
(#define     ELRQUEUE     )59.5 62.4 ms
0.498 0 0.498 r
(0)s
0 0 0.498 r
(#define     ELCQUEUE     )59.5 52.4 ms
0.498 0 0.498 r
(1)s
re sp
%%PageTrailer
%%Page: 3 3
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(src/h/types.h                                                               Pagina 3)59.5 792.4 ms
0 0.498 0.498 r
(/*******************************************************************************)59.5 762.4 ms
(                                  Strutture)59.5 752.4 ms
(*******************************************************************************/)59.5 742.4 ms
(/*)59.5 722.4 ms
( * Cronometri, per misurazioni temporali.)59.5 712.4 ms
( */)59.5 702.4 ms
0 0.498 0 r
(typedef)59.5 692.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(struct)s
F0 sf
0 g
( {)s
(        )59.5 682.4 ms
F1 sf
0 0.498 0 r
(double)s
F0 sf
0 g
( cr_elapsed;)s
(        )59.5 672.4 ms
F1 sf
0 0.498 0 r
(struct)s
F0 sf
0 g
( timeval cr_start;)s
(} crono_t;)59.5 662.4 ms
F1 sf
0 0.498 0.498 r
(/*)59.5 632.4 ms
( * Timeout, eseguono un trigger allo scadere di un intervallo di tempo.)59.5 622.4 ms
( */)59.5 612.4 ms
0 0.498 0 r
(typedef)59.5 602.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(struct)s
F0 sf
0 g
( timeout_t {)s
(        )59.5 592.4 ms
F1 sf
0 0.498 0.498 r
(/* Se TRUE la struct deve essere deallocata dopo l'esecuzione del)s
(         * trigger. */)59.5 582.4 ms
F0 sf
0 g
(        )59.5 572.4 ms
F1 sf
0 0.498 0 r
(bool)s
F0 sf
0 g
( to_oneshot;)s
(        )59.5 552.4 ms
F1 sf
0 0.498 0.498 r
(/* Durata del timeout e cronometro. */)s
F0 sf
0 g
(        )59.5 542.4 ms
F1 sf
0 0.498 0 r
(double)s
F0 sf
0 g
( to_maxval;)s
(        crono_t to_crono;)59.5 532.4 ms
(        )59.5 512.4 ms
F1 sf
0 0.498 0.498 r
(/* Funzione da eseguire allo scadere. */)s
F0 sf
0 g
(        timeout_handler_t to_trigger;)59.5 502.4 ms
(        )59.5 492.4 ms
F1 sf
0 0.498 0 r
(int)s
F0 sf
0 g
( to_trigger_arg;)s
(        )59.5 472.4 ms
F1 sf
0 0.498 0.498 r
(/* Per la coda mantenuta dal timeout_manager. */)s
F0 sf
0 g
(        )59.5 462.4 ms
F1 sf
0 0.498 0 r
(struct)s
F0 sf
0 g
( timeout_t *to_next;)s
(        )59.5 452.4 ms
F1 sf
0 0.498 0 r
(struct)s
F0 sf
0 g
( timeout_t *to_prev;)s
(} timeout_t;)59.5 442.4 ms
F1 sf
0 0.498 0.498 r
(/*)59.5 412.4 ms
( * Canali di rete.)59.5 402.4 ms
( */)59.5 392.4 ms
0 0.498 0 r
(struct)59.5 382.4 ms
F0 sf
0 g
( chan {)s
(        )59.5 372.4 ms
F1 sf
0 0.498 0.498 r
(/* Connected e listening socket. */)s
F0 sf
0 g
(        )59.5 362.4 ms
F1 sf
0 0.498 0 r
(int)s
F0 sf
0 g
( c_sockfd;)s
(        )59.5 352.4 ms
F1 sf
0 0.498 0 r
(int)s
F0 sf
0 g
( c_listfd;)s
(        )59.5 332.4 ms
F1 sf
0 0.498 0.498 r
(/* Indirizzi locale e remoto. */)s
F0 sf
0 g
(        )59.5 322.4 ms
F1 sf
0 0.498 0 r
(struct)s
F0 sf
0 g
( sockaddr_in c_laddr;)s
(        )59.5 312.4 ms
F1 sf
0 0.498 0 r
(struct)s
F0 sf
0 g
( sockaddr_in c_raddr;)s
(        )59.5 292.4 ms
F1 sf
0 0.498 0.498 r
(/* Dimensioni dei buffer tcp. */)s
F0 sf
0 g
(        )59.5 282.4 ms
F1 sf
0 0.498 0 r
(size_t)s
F0 sf
0 g
( c_tcp_rcvbuf_len;)s
(        )59.5 272.4 ms
F1 sf
0 0.498 0 r
(size_t)s
F0 sf
0 g
( c_tcp_sndbuf_len;)s
(        )59.5 252.4 ms
F1 sf
0 0.498 0.498 r
(/* Timeout di attivita'. */)s
F0 sf
0 g
(        timeout_t *c_activity;)59.5 242.4 ms
(};)59.5 232.4 ms
F1 sf
0 0.498 0.498 r
(/*)59.5 202.4 ms
( * Coda circolare a dimensione fissa.)59.5 192.4 ms
( */)59.5 182.4 ms
0 0.498 0 r
(typedef)59.5 172.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(struct)s
F0 sf
0 g
( {)s
(        )59.5 162.4 ms
F1 sf
0 0.498 0.498 r
(/* TRUE quando tail e' minore di head, distingue coda completamente)s
(         * vuota da completamente piena. */)59.5 152.4 ms
F0 sf
0 g
(        )59.5 142.4 ms
F1 sf
0 0.498 0 r
(bool)s
F0 sf
0 g
( cq_wrap;)s
(        )59.5 122.4 ms
F1 sf
0 0.498 0.498 r
(/* Puntatore al buffer. */)s
F0 sf
0 g
(        seg_t *cq_data;)59.5 112.4 ms
(        )59.5 92.4 ms
F1 sf
0 0.498 0.498 r
(/* Dimensione del buffer. */)s
F0 sf
0 g
(        )59.5 82.4 ms
F1 sf
0 0.498 0 r
(size_t)s
F0 sf
0 g
( cq_len;)s
(        )59.5 62.4 ms
F1 sf
0 0.498 0.498 r
(/* Testa e coda. */)s
F0 sf
0 g
(        )59.5 52.4 ms
F1 sf
0 0.498 0 r
(int)s
F0 sf
0 g
( cq_head;)s
re sp
%%PageTrailer
%%Page: 4 4
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(src/h/types.h                                                               Pagina 4)59.5 792.4 ms
F0 sf
(        )59.5 772.4 ms
F1 sf
0 0.498 0 r
(int)s
F0 sf
0 g
( cq_tail;)s
(} cqueue_t;)59.5 762.4 ms
F1 sf
0 0.498 0.498 r
(/*)59.5 732.4 ms
( * Wrapper per creare code di segmenti.)59.5 722.4 ms
( */)59.5 712.4 ms
0 0.498 0 r
(struct)59.5 702.4 ms
F0 sf
0 g
( segwrap {)s
(        cd_t sw_assigned;)59.5 692.4 ms
(        seg_t sw_seg[SEGMAXLEN];)59.5 682.4 ms
(        )59.5 672.4 ms
F1 sf
0 0.498 0 r
(size_t)s
F0 sf
0 g
( sw_seglen;)s
(        )59.5 662.4 ms
F1 sf
0 0.498 0 r
(struct)s
F0 sf
0 g
( segwrap *sw_next;)s
(        )59.5 652.4 ms
F1 sf
0 0.498 0 r
(struct)s
F0 sf
0 g
( segwrap *sw_prev;)s
(        )59.5 642.4 ms
F1 sf
0 0.498 0 r
(double)s
F0 sf
0 g
( sw_tstamp;)s
(};)59.5 632.4 ms
F1 sf
0 0.498 0.498 r
(/*)59.5 602.4 ms
( * Coda di routing.)59.5 592.4 ms
( */)59.5 582.4 ms
0 0.498 0 r
(typedef)59.5 572.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(struct)s
F0 sf
0 g
( {)s
(        )59.5 562.4 ms
F1 sf
0 0.498 0.498 r
(/* Buffer circolare per I/O sul sockfd. */)s
F0 sf
0 g
(        cqueue_t *rq_data;)59.5 552.4 ms
(        )59.5 542.4 ms
F1 sf
0 0.498 0.498 r
(/* Coda dei segmenti in uscita / in entrata. */)s
F0 sf
0 g
(        )59.5 532.4 ms
F1 sf
0 0.498 0 r
(struct)s
F0 sf
0 g
( segwrap *rq_sgmt;)s
(        )59.5 522.4 ms
F1 sf
0 0.498 0.498 r
(/* Numero di byte da spedire per completare il segmento)s
(         * corrente. */)59.5 512.4 ms
F0 sf
0 g
(        )59.5 502.4 ms
F1 sf
0 0.498 0 r
(ssize_t)s
F0 sf
0 g
( rq_nbytes;)s
(} rqueue_t;)59.5 492.4 ms
F1 sf
0 0 0.498 r
(#endif)59.5 472.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0.498 r
(/* MH_TYPES_H */)s
re sp
%%PageTrailer
%%Trailer
%%Pages: 4
%%EOF
