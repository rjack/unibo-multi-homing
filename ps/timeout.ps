%!PS-Adobe-3.0
%%Title: src/timeout.c
%%For: jack
%%Creator: VIM - Vi IMproved 7.1 (2007 May 12)
%%CreationDate: Fri Mar 14 13:25:19 2008
%%DocumentData: Clean8Bit
%%Orientation: Portrait
%%Pages: (atend)
%%PageOrder: Ascend
%%BoundingBox: 59 49 564 800
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-Oblique
%%+ font Courier-BoldOblique
%%DocumentSuppliedResources: procset VIM-Prolog 1.4 1
%%+ encoding VIM-latin1 1.0 0
%%Requirements: duplex collate color
%%EndComments
%%BeginDefaults
%%PageResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-Oblique
%%+ font Courier-BoldOblique
%%PageMedia: A4
%%EndDefaults
%%BeginProlog
%%BeginResource: procset VIM-Prolog
%%BeginDocument: /usr/share/vim/vim71/print/prolog.ps
%!PS-Adobe-3.0 Resource-ProcSet
%%Title: VIM-Prolog
%%Version: 1.4 1
%%EndComments
% Editing of this file is NOT RECOMMENDED.  You run a very good risk of causing
% all PostScript printing from VIM failing if you do.  PostScript is not called
% a write-only language for nothing!
/packedarray where not{userdict begin/setpacking/pop load def/currentpacking
false def end}{pop}ifelse/CP currentpacking def true setpacking
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/d/def ld
/db{dict begin}bd/cde{currentdict end}bd
/T true d/F false d
/SO null d/sv{/SO save d}bd/re{SO restore}bd
/L2 systemdict/languagelevel 2 copy known{get exec}{pop pop 1}ifelse 2 ge d
/m/moveto ld/s/show ld /ms{m s}bd /g/setgray ld/r/setrgbcolor ld/sp{showpage}bd
/gs/gsave ld/gr/grestore ld/cp/currentpoint ld
/ul{gs UW setlinewidth cp UO add 2 copy newpath m 3 1 roll add exch lineto
stroke gr}bd
/bg{gs r cp BO add 4 -2 roll rectfill gr}bd
/sl{90 rotate 0 exch translate}bd
L2{
/sspd{mark exch{setpagedevice}stopped cleartomark}bd
/nc{1 db/NumCopies ed cde sspd}bd
/sps{3 db/Orientation ed[3 1 roll]/PageSize ed/ImagingBBox null d cde sspd}bd
/dt{2 db/Tumble ed/Duplex ed cde sspd}bd
/c{1 db/Collate ed cde sspd}bd
}{
/nc{/#copies ed}bd
/sps{statusdict/setpage get exec}bd
/dt{statusdict/settumble 2 copy known{get exec}{pop pop pop}ifelse
statusdict/setduplexmode 2 copy known{get exec}{pop pop pop}ifelse}bd
/c{pop}bd
}ifelse
/ffs{findfont exch scalefont d}bd/sf{setfont}bd
/ref{1 db findfont dup maxlength dict/NFD ed{exch dup/FID ne{exch NFD 3 1 roll
put}{pop pop}ifelse}forall/Encoding findresource dup length 256 eq{NFD/Encoding
3 -1 roll put}{pop}ifelse NFD dup/FontType get 3 ne{/CharStrings}{/CharProcs}
ifelse 2 copy known{2 copy get dup maxlength dict copy[/questiondown/space]{2
copy known{2 copy get 2 index/.notdef 3 -1 roll put pop exit}if pop}forall put
}{pop pop}ifelse dup NFD/FontName 3 -1 roll put NFD definefont pop end}bd
CP setpacking
(\004)cvn{}bd
% vim:ff=unix:
%%EOF
%%EndDocument
%%EndResource
%%BeginResource: encoding VIM-latin1
%%BeginDocument: /usr/share/vim/vim71/print/latin1.ps
%!PS-Adobe-3.0 Resource-Encoding
%%Title: VIM-latin1
%%Version: 1.0 0
%%EndComments
/VIM-latin1[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quotesingle
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/grave /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis]
/Encoding defineresource pop
% vim:ff=unix:
%%EOF
%%EndDocument
%%EndResource
%%EndProlog
%%BeginSetup
595 842 0 sps
1 nc
T F dt
T c
%%IncludeResource: font Courier
/_F0 /VIM-latin1 /Courier ref
/F0 10 /_F0 ffs
%%IncludeResource: font Courier-Bold
/_F1 /VIM-latin1 /Courier-Bold ref
/F1 10 /_F1 ffs
%%IncludeResource: font Courier-Oblique
/_F2 /VIM-latin1 /Courier-Oblique ref
/F2 10 /_F2 ffs
%%IncludeResource: font Courier-BoldOblique
/_F3 /VIM-latin1 /Courier-BoldOblique ref
/F3 10 /_F3 ffs
/UO -1 d
/UW 0.5 d
/BO -2.5 d
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(src/timeout.c                                                               Pagina 1)59.5 792.4 ms
0 0 0.498 r
(#include )59.5 772.4 ms
0.498 0 0.498 r
("h/types.h")s
0 0 0.498 r
(#include )59.5 762.4 ms
0.498 0 0.498 r
("h/util.h")s
0 0 0.498 r
(#include )59.5 752.4 ms
0.498 0 0.498 r
("h/channel.h")s
0 0 0.498 r
(#include )59.5 742.4 ms
0.498 0 0.498 r
("h/crono.h")s
0 0 0.498 r
(#include )59.5 732.4 ms
0.498 0 0.498 r
("h/segment.h")s
0 0 0.498 r
(#include )59.5 722.4 ms
0.498 0 0.498 r
("h/timeout.h")s
0 0 0.498 r
(#include )59.5 702.4 ms
0.498 0 0.498 r
(<assert.h>)s
0 0 0.498 r
(#include )59.5 692.4 ms
0.498 0 0.498 r
(<config.h>)s
0 0 0.498 r
(#include )59.5 682.4 ms
0.498 0 0.498 r
(<stdio.h>)s
0 0 0.498 r
(#include )59.5 672.4 ms
0.498 0 0.498 r
(<unistd.h>)s
0 0 0.498 r
(#define     TYPE     timeout_t)59.5 652.4 ms
(#define     NEXT     to_next)59.5 642.4 ms
(#define     PREV     to_prev)59.5 632.4 ms
(#define     EMPTYQ   )59.5 622.4 ms
0.498 0 0.498 r
(NULL)s
0 0 0.498 r
(#include )59.5 612.4 ms
0.498 0 0.498 r
("src/queue_template")s
0 0.498 0.498 r
(/*******************************************************************************)59.5 582.4 ms
(                          Macro e definizioni locali)59.5 572.4 ms
(*******************************************************************************/)59.5 562.4 ms
0 0 0.498 r
(#define     HUGE_TIMEOUT     )59.5 542.4 ms
0.498 0 0.498 r
(1000000000)s
0 0 0.498 r
(#define     VALID_CLASS\(cn\)                             \\)59.5 522.4 ms
(        \(\(cn\) == TOACK || \(cn\) == TOACT || \(cn\) == TONAK\))59.5 512.4 ms
0 0.498 0.498 r
(/*******************************************************************************)59.5 482.4 ms
(                               Variabili locali)59.5 472.4 ms
(*******************************************************************************/)59.5 462.4 ms
(/* Code di timeout.)59.5 442.4 ms
( * Per ogni coda l'ordine dei timeout e' indifferente. */)59.5 432.4 ms
0 0.498 0 r
(static)59.5 422.4 ms
F0 sf
0 g
( timeout_t *tqueue[TMOUTS];)s
F1 sf
0 0.498 0.498 r
(/* Intervallo spedizione ACK. */)59.5 402.4 ms
0 0.498 0 r
(static)59.5 392.4 ms
F0 sf
0 g
( timeout_t ack_timeout;)s
F1 sf
0 0.498 0.498 r
(/* Controllo paranoia. */)59.5 372.4 ms
0 0.498 0 r
(static)59.5 362.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(bool)s
F0 sf
0 g
( init_done = FALSE;)s
F1 sf
0 0.498 0.498 r
(/* Abilitato solo dal proxy receiver. */)59.5 342.4 ms
0 0.498 0 r
(static)59.5 332.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(bool)s
F0 sf
0 g
( ack_on = FALSE;)s
F1 sf
0 0.498 0.498 r
(/*******************************************************************************)59.5 312.4 ms
(                       Prototipi delle funzioni locali)59.5 302.4 ms
(*******************************************************************************/)59.5 292.4 ms
0 0.498 0 r
(static)59.5 272.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(void)s
F0 sf
0 g
( ack_handler \()s
F1 sf
0 0.498 0 r
(int)s
F0 sf
0 g
( discard\);)s
F1 sf
0 0.498 0 r
(static)59.5 262.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(void)s
F0 sf
0 g
( nak_handler \()s
F1 sf
0 0.498 0 r
(int)s
F0 sf
0 g
( seq\);)s
F1 sf
0 0.498 0 r
(static)59.5 252.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(double)s
F0 sf
0 g
( timeout_check \(timeout_t *to\);)s
F1 sf
0 0.498 0.498 r
(/*******************************************************************************)59.5 222.4 ms
(                                   Funzioni)59.5 212.4 ms
(*******************************************************************************/)59.5 202.4 ms
0 0.498 0 r
(void)59.5 172.4 ms
F0 sf
0 g
(add_timeout \(timeout_t *to, )59.5 162.4 ms
F1 sf
0 0.498 0 r
(int)s
F0 sf
0 g
( class\))s
({)59.5 152.4 ms
(        )59.5 142.4 ms
F1 sf
0 0.498 0.498 r
(/* Aggiunge to alla lista dei timeout di classe class, in modo che)s
(         * venga gestito da check_timeouts.)59.5 132.4 ms
(         * )59.5 122.4 ms
F0 sf
0 g
(XXX)s
F1 sf
0 0.498 0.498 r
( se to e' oneshot il chiamante non deve piu' usare il puntatore)s
(         * )59.5 112.4 ms
F0 sf
0 g
(XXX)s
F1 sf
0 0.498 0.498 r
( a to, perche' non ha modo di sapere con sicurezza quando verra')s
(         * )59.5 102.4 ms
F0 sf
0 g
(XXX)s
F1 sf
0 0.498 0.498 r
( deallocato senza rischiare un segfault. */)s
F0 sf
0 g
(        assert \(to != )59.5 82.4 ms
F1 sf
0.498 0 0.498 r
(NULL)s
F0 sf
0 g
(\);)s
(        assert \(VALID_CLASS \(class\)\);)59.5 72.4 ms
(        assert \(init_done\);)59.5 62.4 ms
(        assert \(!qcontains \(tqueue[class], to\)\);)59.5 52.4 ms
re sp
%%PageTrailer
%%Page: 2 2
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(src/timeout.c                                                               Pagina 2)59.5 792.4 ms
F0 sf
(        qenqueue \(&tqueue[class], to\);)59.5 762.4 ms
(})59.5 752.4 ms
F1 sf
0 0.498 0 r
(void)59.5 722.4 ms
F0 sf
0 g
(add_nak_timeout \(seq_t seq\))59.5 712.4 ms
({)59.5 702.4 ms
(        timeout_t *to;)59.5 692.4 ms
(        assert \(init_done\);)59.5 672.4 ms
(        )59.5 652.4 ms
F1 sf
0 0.498 0.498 r
(/* Crea un timeout oneshot per attesa spedizione nak. */)s
F0 sf
0 g
(        to = timeout_create \(TONAK_VAL, nak_handler, seq, TRUE\);)59.5 642.4 ms
(        timeout_reset \(to\);)59.5 632.4 ms
(        add_timeout \(to, TONAK\);)59.5 622.4 ms
(})59.5 612.4 ms
F1 sf
0 0.498 0 r
(double)59.5 582.4 ms
F0 sf
0 g
(check_timeouts \()59.5 572.4 ms
F1 sf
0 0.498 0 r
(void)s
F0 sf
0 g
(\))s
({)59.5 562.4 ms
(        )59.5 552.4 ms
F1 sf
0 0.498 0.498 r
(/* Chiama timeout_check su tutti i timeout.)s
(         * Ritorna il valore del timeout piu' prossimo a scadere. */)59.5 542.4 ms
F0 sf
0 g
(        )59.5 522.4 ms
F1 sf
0 0.498 0 r
(int)s
F0 sf
0 g
( i;)s
(        )59.5 512.4 ms
F1 sf
0 0.498 0 r
(double)s
F0 sf
0 g
( left;)s
(        )59.5 502.4 ms
F1 sf
0 0.498 0 r
(double)s
F0 sf
0 g
( min = HUGE_TIMEOUT;)s
(        timeout_t *cur;)59.5 492.4 ms
(        timeout_t *nxt;)59.5 482.4 ms
(        assert \(init_done\);)59.5 462.4 ms
(        )59.5 442.4 ms
F1 sf
0.498 0.498 0 r
(for)s
F0 sf
0 g
( \(i = )s
F1 sf
0.498 0 0.498 r
(0)s
F0 sf
0 g
(; i < TMOUTS; i++\) {)s
(                cur = getHead \(tqueue[i]\);)59.5 432.4 ms
(                )59.5 422.4 ms
F1 sf
0.498 0.498 0 r
(while)s
F0 sf
0 g
( \(!isEmpty \(tqueue[i]\) && cur != )s
F1 sf
0.498 0 0.498 r
(NULL)s
F0 sf
0 g
(\) {)s
(                        )59.5 412.4 ms
F1 sf
0 0.498 0 r
(bool)s
F0 sf
0 g
( oneshot;)s
(                        oneshot = cur->to_oneshot;)59.5 402.4 ms
(                        )59.5 392.4 ms
F1 sf
0.498 0.498 0 r
(if)s
F0 sf
0 g
( \(getNext \(cur\) == getHead \(tqueue[i]\)\))s
(                                nxt = )59.5 382.4 ms
F1 sf
0.498 0 0.498 r
(NULL)s
F0 sf
0 g
(;)s
(                        )59.5 372.4 ms
F1 sf
0.498 0.498 0 r
(else)s
F0 sf
0 g
(                                nxt = getNext \(cur\);)59.5 362.4 ms
(                        left = timeout_check \(cur\);)59.5 352.4 ms
(                        )59.5 342.4 ms
F1 sf
0.498 0.498 0 r
(if)s
F0 sf
0 g
( \(left > )s
F1 sf
0.498 0 0.498 r
(0)s
F0 sf
0 g
(\))s
(                                min = MIN \(min, left\);)59.5 332.4 ms
(                        )59.5 322.4 ms
F1 sf
0.498 0.498 0 r
(else)s
F0 sf
0 g
( )s
F1 sf
0.498 0.498 0 r
(if)s
F0 sf
0 g
( \(oneshot == TRUE\) {)s
(                                del_timeout \(cur, i\);)59.5 312.4 ms
(                                timeout_destroy \(cur\);)59.5 302.4 ms
(                        })59.5 292.4 ms
(                        cur = nxt;)59.5 282.4 ms
(                })59.5 272.4 ms
(        })59.5 262.4 ms
(        )59.5 242.4 ms
F1 sf
0.498 0.498 0 r
(return)s
F0 sf
0 g
( \(min == HUGE_TIMEOUT ? )s
F1 sf
0.498 0 0.498 r
(0)s
F0 sf
0 g
( : min\);)s
(})59.5 232.4 ms
F1 sf
0 0.498 0 r
(void)59.5 202.4 ms
F0 sf
0 g
(del_timeout \(timeout_t *to, )59.5 192.4 ms
F1 sf
0 0.498 0 r
(int)s
F0 sf
0 g
( class\))s
({)59.5 182.4 ms
(        )59.5 172.4 ms
F1 sf
0 0.498 0.498 r
(/* Rimuove to dalla lista di classe class. */)s
F0 sf
0 g
(        assert \(to != )59.5 152.4 ms
F1 sf
0.498 0 0.498 r
(NULL)s
F0 sf
0 g
(\);)s
(        assert \(class < TMOUTS\);)59.5 142.4 ms
(        assert \(init_done\);)59.5 132.4 ms
(        qremove \(&tqueue[class], to\);)59.5 112.4 ms
(})59.5 102.4 ms
F1 sf
0 0.498 0 r
(void)59.5 72.4 ms
F0 sf
0 g
(del_nak_timeout \(seq_t seq\))59.5 62.4 ms
({)59.5 52.4 ms
re sp
%%PageTrailer
%%Page: 3 3
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(src/timeout.c                                                               Pagina 3)59.5 792.4 ms
F0 sf
(        timeout_t *nakto;)59.5 772.4 ms
(        assert \(init_done\);)59.5 752.4 ms
(        nakto = get_timeout \(TONAK, seq\);)59.5 732.4 ms
(        )59.5 712.4 ms
F1 sf
0.498 0.498 0 r
(if)s
F0 sf
0 g
( \(nakto != )s
F1 sf
0.498 0 0.498 r
(NULL)s
F0 sf
0 g
(\) {)s
(                del_timeout \(nakto, TONAK\);)59.5 702.4 ms
(                timeout_destroy \(nakto\);)59.5 692.4 ms
(        })59.5 682.4 ms
(})59.5 672.4 ms
F1 sf
0 0.498 0 r
(void)59.5 642.4 ms
F0 sf
0 g
(enable_ack_timeout \()59.5 632.4 ms
F1 sf
0 0.498 0 r
(void)s
F0 sf
0 g
(\))s
({)59.5 622.4 ms
(        assert \(!init_done\);)59.5 612.4 ms
(        ack_on = TRUE;)59.5 602.4 ms
(})59.5 592.4 ms
(timeout_t *)59.5 562.4 ms
(get_timeout \()59.5 552.4 ms
F1 sf
0 0.498 0 r
(int)s
F0 sf
0 g
( class, )s
F1 sf
0 0.498 0 r
(int)s
F0 sf
0 g
( id\))s
({)59.5 542.4 ms
(        timeout_t *cur;)59.5 532.4 ms
(        timeout_t *head;)59.5 522.4 ms
(        assert \(VALID_CLASS \(class\)\);)59.5 502.4 ms
(        assert \(init_done\);)59.5 492.4 ms
(        head = getHead \(tqueue[class]\);)59.5 472.4 ms
(        )59.5 462.4 ms
F1 sf
0.498 0.498 0 r
(if)s
F0 sf
0 g
( \(head == )s
F1 sf
0.498 0 0.498 r
(NULL)s
F0 sf
0 g
(\))s
(                )59.5 452.4 ms
F1 sf
0.498 0.498 0 r
(return)s
F0 sf
0 g
( )s
F1 sf
0.498 0 0.498 r
(NULL)s
F0 sf
0 g
(;)s
(        )59.5 432.4 ms
F1 sf
0.498 0.498 0 r
(switch)s
F0 sf
0 g
( \(class\) {)s
(        )59.5 422.4 ms
F1 sf
0.498 0.498 0 r
(case)s
F0 sf
0 g
( TOACK :)s
(                )59.5 412.4 ms
F1 sf
0.498 0.498 0 r
(return)s
F0 sf
0 g
( head;)s
(        )59.5 392.4 ms
F1 sf
0.498 0.498 0 r
(case)s
F0 sf
0 g
( TOACT :)s
(        )59.5 382.4 ms
F1 sf
0.498 0.498 0 r
(case)s
F0 sf
0 g
( TONAK :)s
(                cur = head;)59.5 372.4 ms
(                )59.5 362.4 ms
F1 sf
0.498 0.498 0 r
(while)s
F0 sf
0 g
( \(cur->to_trigger_arg != id)s
(                       && \(cur = getNext \(cur\)\) != head\))59.5 352.4 ms
(                        ;)59.5 342.4 ms
(                )59.5 332.4 ms
F1 sf
0.498 0.498 0 r
(if)s
F0 sf
0 g
( \(cur->to_trigger_arg == id\))s
(                        )59.5 322.4 ms
F1 sf
0.498 0.498 0 r
(return)s
F0 sf
0 g
( cur;)s
(                )59.5 312.4 ms
F1 sf
0.498 0.498 0 r
(return)s
F0 sf
0 g
( )s
F1 sf
0.498 0 0.498 r
(NULL)s
F0 sf
0 g
(;)s
(        )59.5 292.4 ms
F1 sf
0.498 0.498 0 r
(default)s
F0 sf
0 g
( :)s
(                assert \(FALSE\);)59.5 282.4 ms
(                )59.5 272.4 ms
F1 sf
0.498 0.498 0 r
(return)s
F0 sf
0 g
( )s
F1 sf
0.498 0 0.498 r
(NULL)s
F0 sf
0 g
(;)s
(        })59.5 262.4 ms
(})59.5 252.4 ms
F1 sf
0 0.498 0 r
(void)59.5 222.4 ms
F0 sf
0 g
(init_timeout_module \()59.5 212.4 ms
F1 sf
0 0.498 0 r
(void)s
F0 sf
0 g
(\))s
({)59.5 202.4 ms
(        )59.5 192.4 ms
F1 sf
0 0.498 0.498 r
(/* Inizializza le code delle classi dei timeout e imposta il timeout)s
(         * degli ack. */)59.5 182.4 ms
F0 sf
0 g
(        )59.5 162.4 ms
F1 sf
0 0.498 0 r
(int)s
F0 sf
0 g
( i;)s
(        assert \(!init_done\);)59.5 142.4 ms
(        )59.5 122.4 ms
F1 sf
0.498 0.498 0 r
(for)s
F0 sf
0 g
( \(i = )s
F1 sf
0.498 0 0.498 r
(0)s
F0 sf
0 g
(; i < TMOUTS; i++\))s
(                tqueue[i] = newQueue \(\);)59.5 112.4 ms
(        init_done = TRUE;)59.5 92.4 ms
(        )59.5 72.4 ms
F1 sf
0.498 0.498 0 r
(if)s
F0 sf
0 g
( \(ack_on\) {)s
(                timeout_init \(&ack_timeout, TOACK_VAL, ack_handler, )59.5 62.4 ms
F1 sf
0.498 0 0.498 r
(0)s
F0 sf
0 g
(, FALSE\);)s
(                add_timeout \(&ack_timeout, TOACK\);)59.5 52.4 ms
re sp
%%PageTrailer
%%Page: 4 4
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(src/timeout.c                                                               Pagina 4)59.5 792.4 ms
F0 sf
(                timeout_reset \(&ack_timeout\);)59.5 772.4 ms
(        })59.5 762.4 ms
(})59.5 752.4 ms
(timeout_t *)59.5 722.4 ms
(timeout_create)59.5 712.4 ms
(\()59.5 702.4 ms
F1 sf
0 0.498 0 r
(double)s
F0 sf
0 g
( maxval, timeout_handler_t trigger, )s
F1 sf
0 0.498 0 r
(int)s
F0 sf
0 g
( trigger_arg, )s
F1 sf
0 0.498 0 r
(bool)s
F0 sf
0 g
( oneshot\))s
({)59.5 692.4 ms
(        )59.5 682.4 ms
F1 sf
0 0.498 0.498 r
(/* Crea e inizializza un timeout, restituendone il puntatore.)s
(         * Il timeout puo' essere attivato con timeout_reset. */)59.5 672.4 ms
F0 sf
0 g
(        timeout_t *newto;)59.5 652.4 ms
(        assert \(maxval > )59.5 632.4 ms
F1 sf
0.498 0 0.498 r
(0)s
F0 sf
0 g
(\);)s
(        assert \(trigger != )59.5 622.4 ms
F1 sf
0.498 0 0.498 r
(NULL)s
F0 sf
0 g
(\);)s
(        assert \(BOOL_VALUE \(oneshot\)\);)59.5 612.4 ms
(        newto = xmalloc \()59.5 592.4 ms
F1 sf
0.498 0.498 0 r
(sizeof)s
F0 sf
0 g
( \(timeout_t\)\);)s
(        timeout_init \(newto, maxval, trigger, trigger_arg, oneshot\);)59.5 582.4 ms
(        )59.5 562.4 ms
F1 sf
0.498 0.498 0 r
(return)s
F0 sf
0 g
( newto;)s
(})59.5 552.4 ms
F1 sf
0 0.498 0 r
(void)59.5 522.4 ms
F0 sf
0 g
(timeout_destroy \(timeout_t *to\))59.5 512.4 ms
({)59.5 502.4 ms
(        )59.5 492.4 ms
F1 sf
0 0.498 0.498 r
(/* Dealloca le strutture dati associate a to. */)s
F0 sf
0 g
(        assert \(to != )59.5 472.4 ms
F1 sf
0.498 0 0.498 r
(NULL)s
F0 sf
0 g
(\);)s
(        xfree \(to\);)59.5 462.4 ms
(})59.5 452.4 ms
F1 sf
0 0.498 0 r
(void)59.5 422.4 ms
F0 sf
0 g
(timeout_init \(timeout_t *to, )59.5 412.4 ms
F1 sf
0 0.498 0 r
(double)s
F0 sf
0 g
( maxval, timeout_handler_t trigger,)s
(              )59.5 402.4 ms
F1 sf
0 0.498 0 r
(int)s
F0 sf
0 g
( trigger_arg, )s
F1 sf
0 0.498 0 r
(bool)s
F0 sf
0 g
( oneshot\))s
({)59.5 392.4 ms
(        )59.5 382.4 ms
F1 sf
0 0.498 0.498 r
(/* Inizializza il timeout con i valori dati.)s
(         * Il timeout puo' essere attivato con timeout_reset. */)59.5 372.4 ms
F0 sf
0 g
(        assert \(to != )59.5 352.4 ms
F1 sf
0.498 0 0.498 r
(NULL)s
F0 sf
0 g
(\);)s
(        assert \(maxval > )59.5 342.4 ms
F1 sf
0.498 0 0.498 r
(0)s
F0 sf
0 g
(\);)s
(        assert \(trigger != )59.5 332.4 ms
F1 sf
0.498 0 0.498 r
(NULL)s
F0 sf
0 g
(\);)s
(        assert \(BOOL_VALUE \(oneshot\)\);)59.5 322.4 ms
(        to->to_maxval = maxval;)59.5 302.4 ms
(        to->to_trigger = trigger;)59.5 292.4 ms
(        to->to_trigger_arg = trigger_arg;)59.5 282.4 ms
(        to->to_oneshot = oneshot;)59.5 272.4 ms
(})59.5 262.4 ms
F1 sf
0 0.498 0 r
(void)59.5 232.4 ms
F0 sf
0 g
(timeout_reset \(timeout_t *to\))59.5 222.4 ms
({)59.5 212.4 ms
(        )59.5 202.4 ms
F1 sf
0 0.498 0.498 r
(/* Reinizilizza la durata del timeout facendo ripartire il cronometro)s
(         * associato. */)59.5 192.4 ms
F0 sf
0 g
(        assert \(to != )59.5 172.4 ms
F1 sf
0.498 0 0.498 r
(NULL)s
F0 sf
0 g
(\);)s
(        crono_start \(&to->to_crono\);)59.5 162.4 ms
(})59.5 152.4 ms
F1 sf
0 0.498 0.498 r
(/*******************************************************************************)59.5 122.4 ms
(                               Funzioni locali)59.5 112.4 ms
(*******************************************************************************/)59.5 102.4 ms
0 0.498 0 r
(static)59.5 82.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(void)s
F0 sf
0 g
(ack_handler \()59.5 72.4 ms
F1 sf
0 0.498 0 r
(int)s
F0 sf
0 g
( discard\))s
({)59.5 62.4 ms
(        )59.5 52.4 ms
F1 sf
0 0.498 0 r
(struct)s
F0 sf
0 g
( segwrap *ack;)s
re sp
%%PageTrailer
%%Page: 5 5
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(src/timeout.c                                                               Pagina 5)59.5 792.4 ms
F0 sf
(        seq_t ackseq;)59.5 772.4 ms
(        ackseq = get_last_sent_to_host \(\);)59.5 752.4 ms
(        ack = segwrap_ack_create \(ackseq\);)59.5 742.4 ms
(        urgent_add \(ack\);)59.5 732.4 ms
(})59.5 722.4 ms
F1 sf
0 0.498 0 r
(static)59.5 692.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(void)s
F0 sf
0 g
(nak_handler \()59.5 682.4 ms
F1 sf
0 0.498 0 r
(int)s
F0 sf
0 g
( seq\))s
({)59.5 672.4 ms
(        )59.5 662.4 ms
F1 sf
0 0.498 0 r
(struct)s
F0 sf
0 g
( segwrap *nak;)s
(        nak = segwrap_nak_create \(seq\);)59.5 642.4 ms
F1 sf
0 0 0.498 r
(#ifdef VERBOSE)59.5 632.4 ms
F0 sf
0 g
(        segwrap_print \()59.5 622.4 ms
F1 sf
0.498 0 0.498 r
("nak_handler")s
F0 sf
0 g
(, nak\);)s
F1 sf
0 0 0.498 r
(#endif)59.5 612.4 ms
F0 sf
0 g
(        urgent_add \(nak\);)59.5 602.4 ms
(})59.5 592.4 ms
F1 sf
0 0.498 0 r
(static)59.5 562.4 ms
F0 sf
0 g
( )s
F1 sf
0 0.498 0 r
(double)s
F0 sf
0 g
(timeout_check \(timeout_t *to\))59.5 552.4 ms
({)59.5 542.4 ms
(        )59.5 532.4 ms
F1 sf
0 0.498 0.498 r
(/* Controlla il tempo rimasto in to e, se scaduto, esegue il trigger)s
(         * associato e lo fa ripartire.)59.5 522.4 ms
(         * Ritorna il tempo rimasto in to. */)59.5 512.4 ms
F0 sf
0 g
(        )59.5 492.4 ms
F1 sf
0 0.498 0 r
(double)s
F0 sf
0 g
( left;)s
(        assert \(to != )59.5 472.4 ms
F1 sf
0.498 0 0.498 r
(NULL)s
F0 sf
0 g
(\);)s
(        left = to->to_maxval - crono_measure \(&to->to_crono\);)59.5 452.4 ms
(        )59.5 442.4 ms
F1 sf
0.498 0.498 0 r
(if)s
F0 sf
0 g
( \(left <= )s
F1 sf
0.498 0 0.498 r
(0)s
F0 sf
0 g
(\) {)s
(                timeout_reset \(to\);)59.5 432.4 ms
(                to->to_trigger \(to->to_trigger_arg\);)59.5 422.4 ms
(        })59.5 412.4 ms
(        )59.5 402.4 ms
F1 sf
0.498 0.498 0 r
(return)s
F0 sf
0 g
( left;)s
(})59.5 392.4 ms
re sp
%%PageTrailer
%%Trailer
%%Pages: 5
%%EOF
